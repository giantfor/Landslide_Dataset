https://code.earthengine.google.com/c7134e28b4be9ec9c70f6bf245a22397

----------------------------------Code------------------------------

// Definisi wilayah (Kecamatan Sukajaya dan Cigudeg, Kabupaten Bogor)
var geometry = ee.Geometry.Polygon([
  [
    [106.5, -6.7],
    [107.0, -6.7],
    [107.0, -6.5],
    [106.5, -6.5]
  ]
]);

// Citra Elevasi untuk menghitung slope
var dem = ee.Image('USGS/SRTMGL1_003');
var slope = ee.Terrain.slope(dem);

// Data curah hujan CHIRPS
var rainfall = ee.ImageCollection('UCSB-CHG/CHIRPS/DAILY')
  .filterDate('2022-01-01', '2022-12-31')
  .filterBounds(geometry)
  .sum()
  .rename('Rainfall');

// Data vegetasi (NDVI) dari Sentinel-2
var s2 = ee.ImageCollection('COPERNICUS/S2')
  .filterDate('2022-01-01', '2022-12-31')
  .filterBounds(geometry)
  .map(function(image) {
    var ndvi = image.normalizedDifference(['B8', 'B4']).rename('NDVI');
    return image.addBands(ndvi);
  })
  .select('NDVI')
  .median()
  .clip(geometry);

// Menggunakan dataset sungai HydroSHEDS
var rivers = ee.FeatureCollection('WWF/HydroSHEDS/v1/FreeFlowingRivers');
var riversInBogor = rivers.filterBounds(geometry);

// Membuat citra raster sungai
var riverRaster = riversInBogor.map(function(feature) {
  return feature.set('constant', 1); // Tambahkan atribut konstan
}).reduceToImage({
  properties: ['constant'],
  reducer: ee.Reducer.first()
}).unmask(0).clip(geometry); // Isi nilai null dengan 0

var riverDistance = riverRaster.fastDistanceTransform().sqrt().rename('River_Distance');

// Stabilitas tanah (contoh menggunakan slope sebagai proxy)
var stability = slope.expression('1 / (1 + SLOPE)', {SLOPE: slope}).rename('Stability');

// Menggabungkan semua parameter menjadi satu citra
var landslideFactors = ee.Image.cat([stability, rainfall, s2, riverDistance, slope])
  .rename(['Stability', 'Rainfall', 'Vegetation', 'River_Distance', 'Slope']);

// Area dekat sungai (threshold < 500 meter) dan dengan kemiringan lereng signifikan (> 20 derajat)
var nearRiverSlope = riverDistance.lt(500)
  .and(slope.gt(20))
  .selfMask();

// Menampilkan hasil pada peta dengan warna berbeda
Map.centerObject(geometry);
//Map.addLayer(dem, {min: 0, max: 3000, palette: ['e0f3f8', '91bfdb', '4575b4']}, 'DEM (Latar Belakang)');
Map.addLayer(nearRiverSlope, {palette: 'red'}, 'Dekat Sungai dan Lereng Signifikan');
//Map.addLayer(slope, {min: 0, max: 60, palette: ['yellow', 'orange', 'red']}, 'Slope (Kemiringan)');

// Sampling daerah dengan risiko tinggi
var samples = landslideFactors.sample({
  region: geometry,
  scale: 30,
  numPixels: 50,
  geometries: true
});

// Menambahkan lapisan lokasi sampel
Map.addLayer(samples, {color: 'black'}, 'Samples');

// Menambahkan koordinat longitude dan latitude
samples = samples.map(function(feature) {
  var coords = feature.geometry().coordinates();
  return feature.set({
    Longitude: coords.get(0),
    Latitude: coords.get(1)
  });
});

// Mendapatkan URL unduhan untuk data CSV
Export.table.toDrive({
  collection: samples,
  description: 'Landslide_HighRisk_NearRiver_Bogor',
  fileFormat: 'CSV',
  selectors: ['Longitude', 'Latitude', 'Stability', 'Rainfall', 'Vegetation', 'River_Distance', 'Slope']
});

